/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.formularios;

import controlador.Metodos1;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.productos.InventarioLocal;
import modelo.productos.Producto;
import vista.componentesGraficos.formularioPropiedades;



/**
 *
 * @author Joel
 */
public class Vender extends formularioPropiedades {
 InventarioLocal inventario = new InventarioLocal();
        List<Producto> productos = inventario.getProductos();
    Metodos1 m = new Metodos1();
    /**
     * Creates new form Vender
     */
    public Vender() {
        initComponents();
     cargarTablaPrincipal();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_principal = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_cart = new javax.swing.JTable();
        menosBtn = new javax.swing.JButton();
        cantidadTxtfield = new javax.swing.JTextField();
        masBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        venderBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();
        limpiarBtn = new javax.swing.JButton();
        buscarTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        agregarBtn = new javax.swing.JButton();
        mPagoCmbox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        converCBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1080, 680));

        tabla_principal.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_principal.setForeground(new java.awt.Color(211, 211, 211));
        tabla_principal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Precio", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_principal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabla_principal.setShowGrid(true);
        tabla_principal.getTableHeader().setResizingAllowed(false);
        tabla_principal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_principalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_principal);

        tabla_cart.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_cart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cant.", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_cart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_cartMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_cart);

        menosBtn.setText("-");
        menosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosBtnActionPerformed(evt);
            }
        });

        cantidadTxtfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantidadTxtfield.setText("1");

        masBtn.setText("+");
        masBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Total:");

        totalLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        venderBtn.setText("Vender");
        venderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venderBtnActionPerformed(evt);
            }
        });

        eliminarBtn.setText("Eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        limpiarBtn.setText("Limpiar");
        limpiarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBtnActionPerformed(evt);
            }
        });

        buscarTxt.setToolTipText("");
        buscarTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                buscarTxtFocusLost(evt);
            }
        });
        buscarTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarTxtKeyReleased(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Buscar");

        jCheckBox1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox1.setText("Disponible");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox2.setText("Agotado");
        jCheckBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCheckBox2KeyPressed(evt);
            }
        });

        agregarBtn.setText("Agregar");
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });

        mPagoCmbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "BioPago", "Punto de Venta", "Pago Móvil", "Transferencia" }));
        mPagoCmbox.setSelectedIndex(2);

        jLabel2.setText("Metodo de Pago");

        converCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BsS.", "Dólar" }));
        converCBox.setSelectedIndex(1);
        converCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converCBoxActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Moneda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buscarTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(51, 51, 51))
                                    .addComponent(mPagoCmbox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(145, 145, 145)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(converCBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(48, 48, 48)
                                .addComponent(totalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(menosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cantidadTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(masBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(limpiarBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(venderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eliminarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox2)
                        .addGap(316, 316, 316)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mPagoCmbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(menosBtn)
                            .addComponent(cantidadTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(masBtn)
                            .addComponent(venderBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eliminarBtn)
                            .addComponent(agregarBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiarBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(7, 7, 7)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void cargarTablaPrincipal() {
        // Crear el modelo de la tabla con las columnas necesarias
        DefaultTableModel model = (DefaultTableModel) tabla_principal.getModel();

        // Limpiar cualquier fila existente en la tabla
        model.setRowCount(0);

        // Agregar cada producto a la tabla
        for (Producto producto : productos) {
            Object[] fila = {
                producto.getCodigo(),
                producto.getNombre(),
                producto.getPrecio(),
                producto.getCantidad(),
               
                producto.getMarca().getNombre(),
               
            };
            model.addRow(fila);
        }
    }

    private void tabla_principalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_principalMouseClicked
        // TODO add your handling code here:
        tabla_cart.clearSelection();
    }//GEN-LAST:event_tabla_principalMouseClicked

    private void tabla_cartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_cartMouseClicked
        // TODO add your handling code here:
        tabla_principal.clearSelection();
    }//GEN-LAST:event_tabla_cartMouseClicked

    private void venderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venderBtnActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_venderBtnActionPerformed

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        // TODO add your handling code here:
        m.agregarCarritoSumarTotal(tabla_principal, tabla_cart, cantidadTxtfield, totalLabel, buscarTxt);
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        // TODO add your handling code here:
                // Verificar si el carrito está vacío
                if (tabla_cart.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "El carrito está vacío");
                    return; // Salir del método si el carrito está vacío
                }

                int filaSeleccionada = tabla_cart.getSelectedRow();
                if (filaSeleccionada >= 0) {
                    // Preguntar al usuario si está seguro de eliminar el producto
                    int confirm = JOptionPane.showConfirmDialog(
                            null,
                            "¿Estás seguro de que deseas eliminar este producto del carrito?",
                            "Eliminar del carrito",
                            JOptionPane.YES_NO_OPTION
                    );

                    // Verificar la respuesta del usuario
                    if (confirm == JOptionPane.YES_OPTION) {
                        DefaultTableModel modelo = (DefaultTableModel) tabla_cart.getModel();
                        modelo.removeRow(filaSeleccionada);
                        tabla_cart.repaint();
                        m.updateSoloTotal(tabla_cart, totalLabel, cantidadTxtfield);
                    } else {
                        // El usuario seleccionó "No"
                        //No hace nada

                    }
                } else {
                    // No se seleccionó ninguna fila
                    JOptionPane.showMessageDialog(null, "Por favor, selecciona un producto para eliminar del carrito");
                }
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void limpiarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBtnActionPerformed
        // TODO add your handling code here:
                       // Verificar si hay filas en el carrito
                int filas = tabla_cart.getRowCount();
                if (filas > 0) {
                    // Preguntar al usuario si está seguro de limpiar el carrito
                    int confirm = JOptionPane.showConfirmDialog(
                            null,
                            "¿Estás seguro de que deseas limpiar el carrito?",
                            "Limpiar carrito",
                            JOptionPane.YES_NO_OPTION
                    );

                    // Verificar la respuesta del usuario
                    if (confirm == JOptionPane.YES_OPTION) {
                        // Limpiar el modelo de la tabla y restablecer el monto total
                        DefaultTableModel modelo = (DefaultTableModel) tabla_cart.getModel();
                        modelo.setRowCount(0);
                        totalLabel.setText("");
                    } else {
                        // El usuario seleccionó "No"
                        //No hace nada
                    }
                } else {
                    // No hay productos en el carrito
                    JOptionPane.showMessageDialog(null, "No hay productos en el carrito");
                }
            
    }//GEN-LAST:event_limpiarBtnActionPerformed

    private void masBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masBtnActionPerformed
        // TODO add your handling code here:
           String currentValue = cantidadTxtfield.getText();
        int newValue = Integer.parseInt(currentValue) + 1;
        cantidadTxtfield.setText(String.valueOf(newValue));
    }//GEN-LAST:event_masBtnActionPerformed

    private void menosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menosBtnActionPerformed
        // TODO add your handling code here:
           String currentValue = cantidadTxtfield.getText();
        int newValue = Integer.parseInt(currentValue) - 1;
        cantidadTxtfield.setText(String.valueOf(newValue));
    }//GEN-LAST:event_menosBtnActionPerformed

    private void buscarTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarTxtKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_buscarTxtKeyReleased

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jCheckBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox2KeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox2KeyPressed

    private void converCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converCBoxActionPerformed
        // TODO add your handling code here:
        
            String ConvertedAmount = m.convertCurrency(totalLabel.getText());
           totalLabel.setText(ConvertedAmount);
        
        
       
    }//GEN-LAST:event_converCBoxActionPerformed

    private void buscarTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarTxtFocusGained
        // TODO add your handling code here:
      
        
   
    }//GEN-LAST:event_buscarTxtFocusGained

    private void buscarTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarTxtFocusLost
        // TODO add your handling code here:
     
    }//GEN-LAST:event_buscarTxtFocusLost

    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarBtn;
    private javax.swing.JTextField buscarTxt;
    private javax.swing.JTextField cantidadTxtfield;
    private javax.swing.JComboBox<String> converCBox;
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpiarBtn;
    private javax.swing.JComboBox<String> mPagoCmbox;
    private javax.swing.JButton masBtn;
    private javax.swing.JButton menosBtn;
    private javax.swing.JTable tabla_cart;
    private javax.swing.JTable tabla_principal;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JButton venderBtn;
    // End of variables declaration//GEN-END:variables
}
